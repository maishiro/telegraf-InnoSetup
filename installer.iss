; Script generated by the Inno Script Studio Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "telegraf-WinHost"
#define MyAppVersion "1.0"
#define MyAppPublisher "maishiro"
#define MyAppURL "https://github.com/maishiro/telegraf/tree/fileexec"
#define MyAppExeName "telegraf.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{FE726A8A-3028-4F1F-A99F-EBC529BCFFB1}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName=C:\work\{#MyAppName}
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
OutputDir=output
OutputBaseFilename=setup
Compression=lzma
SolidCompression=yes

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "japanese"; MessagesFile: "compiler:Languages\Japanese.isl"

[Files]
Source: "module\telegraf.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "module\{#MyAppName}.conf"; DestDir: "{app}"; Flags: ignoreversion; AfterInstall: WriteHomePaths('{app}\{#MyAppName}.conf')

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"

[Run] 
Filename: "{app}\telegraf.exe"; Parameters: "--service install --service-name {#MyAppName} --config ""{app}\{#MyAppName}.conf"""; Flags: runhidden
Filename: {sys}\sc.exe; Parameters: "config {#MyAppName}  start= delayed-auto DisplayName= {#MyAppName}"; Flags: runhidden

[UninstallRun]
Filename: "{app}\telegraf.exe"; Parameters: "--service uninstall --service-name {#MyAppName}"; Flags: runhidden

[Code]
function GetHomePath():AnsiString;
var
  str: String;
begin
  str := ExpandConstant('{app}');
  StringChangeEx( str, '\', '/', True );
  Result := str;
  //Log(Result);
end;

procedure WriteHomePaths(S: String);
var
  FileData: TArrayOfString;
  UnicodeStr: string;
  i: Integer;
begin
  LoadStringsFromFile( ExpandConstant(S), FileData );
  for i := 0 to GetArrayLength(FileData)-1 do begin
    StringChangeEx( FileData[i], '####_HOME_PATH_####', GetHomePath(), True );
    StringChangeEx( FileData[i], '####_APP_NAME_####', ExpandConstant('{#MyAppName}'), True );
    Log( FileData[i] );
  end;
  SaveStringsToFile( ExpandConstant(S), FileData, False );
end;
